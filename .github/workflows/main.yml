name: Auto-Build CoreDNS with Fanout
on:
  schedule:
    - cron: '0 0 * * *'  # runs daily at midnight
  workflow_dispatch:  # Manual execution allowed

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
#      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y golang make

      - name: Get CoreDNS & Plugin
        run: |
          git clone https://github.com/coredns/coredns.git
          cd coredns
          echo "fanout:github.com/networkservicemesh/fanout" >> plugin.cfg

      - name: Build CoreDNS
        run: |
          cd coredns
          make

      # https://github.com/sigstore/cosign-installer
#      - name: Install cosign
#        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
#        with:
#          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

#      - name: Build & Push Docker-Image
#        run: |
#          cd coredns
#          docker build -f Dockerfile -t tomtonic/coredns-fanout .
#          echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
#          docker push tomtonic/coredns-fanout

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
#        with:
#          images: tomtonic/coredns-fanout

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: coredns/
          file: coredns/Dockerfile
          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/tomtonic/coredns-fanout
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
